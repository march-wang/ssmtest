<?xml version="1.0" encoding="UTF-8"?>


<!-- 自动扫描控制器，视图模式，注解的启动-->

<beans xmlns="http://www.springframework.org/schema/beans"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
	xmlns:context="http://www.springframework.org/schema/context"  
	  xmlns:aop="http://www.springframework.org/schema/aop"
	  xmlns:mvc="http://www.springframework.org/schema/mvc"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
	http://www.springframework.org/schema/context    
	http://www.springframework.org/schema/context/spring-context-3.1.xsd    
	http://www.springframework.org/schema/mvc    
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- 自动扫描改包，使springmvc 认为包用了@controller 注解的类是控制器 -->	
	<context:component-scan base-package="com.javen.controller"></context:component-scan>
	
	<!-- 扩充了 注解驱动，可以将请求参数绑定到控制器参数
			  上面的标签相当于 如下配置 
		与<context:component-scan/>的区别

		<context:component-scan/>标签是告诉Spring 来扫描指定包下的类，并注册被@Component，@Controller，@Service，@Repository等注解标记的组件。
		而<mvc:annotation-scan/>是告知Spring，我们启用注解驱动。然后Spring会自动为我们注册上面说到的几个Bean到工厂中，
		 HandlerMapping  
		<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping "></bean>
		<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"></bean>
		   HandlerAdapter  
		<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>
		<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter "></bean>
		<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>
			  HadnlerExceptionResolvers 
		<bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver "></bean>
		<bean class="org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver"></bean>
		<bean class="org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver"></bean>

		上面的配置也说明，这些Bean是不需要写name、id属性的。他们是会被以类型的形式提供给DispatcherServlet使用。

		-->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 启动对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	
	<!-- 静态资源处理 css,js images-->
	<mvc:resources location="/resources/**" mapping="/resources" />
	
	<!--全局异常捕捉 -->
	<bean class="com.javen.exception.GlobalExceptionResolver" />
	
	<!-- 避免IE 执行ajax 时，返回json 出现文件下载-->
	<bean id="mappingJacksonHttpMessageConverter"
		class ="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
		
	</bean>
	
	
	<!-- 启动springmvc 的注解功能，完成请求和注解POJO的映射-->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean ="mappingJacksonHttpMessageConverter"></ref>
				
			</list>
			
		</property>
		
	</bean>
		 
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配也不要引用上传组建包-->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		
		<property name="defaultEncoding" value ="utf-8"></property>
		
		<!-- 文件大小最大值 -->  
		<property name="maxUploadSize" value="10485760000" />    
		<!-- 内存中的最大值 -->  
		<property name="maxInMemorySize" value="40960" />    
		<!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
		<property name="resolveLazily" value="true"/>	
	</bean>
	
	
	  
	<!-- 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后-->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1"></property>
		<property name="mediaTypes">
			<map>
				<!-- 告诉视图解析器，返回的类型为json格式 -->
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="htm" value="text/htm" />
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<!-- ModelAndView里的数据变成JSON -->
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
			</list>
		</property>
		<property name="ignoreAcceptHeader" value="true"></property>
	</bean>
    
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
		<property name="prefix" value="/WEB-INF/jsp/" />  
		<property name="suffix" value=".jsp" />  
	</bean>  
</beans>  
	
 